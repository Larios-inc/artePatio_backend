// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


//  ----------------- HERE WE ARE SETTING THE MODELS FOR OUR PRODUCTS ----------------

model Product {
  idProduct        String @unique
  name_Product     String @unique
  price            Int @default(0)
  created_At       DateTime @default(now())
  is_Active        Boolean @default(true)
  img_Main_Product String?
  description      DescriptionProduct[]
  category         Category @relation(fields: [categoryId], references: [idCategory])
  categoryId       String
  orderItems       OrderItems[]
  monthlySale      MonthlySale[]
  topSale          TopSale[]

  @@id([idProduct])
}

model DescriptionProduct{
  idDescription   String @unique
  desc            String
  desc_1          String?
  stock           Int @default(0)
  descImg         descImg[]
  product         Product @relation(fields: [productId], references: [idProduct])
  productId       String

  @@id([idDescription, productId])
}
 
model descImg{
  idDescImg          String @unique
  imgs               String?
  DescriptionProduct DescriptionProduct @relation(fields: [DescriptionProductID], references: [idDescription])
  DescriptionProductID String
  @@id([idDescImg, DescriptionProductID])
}

model Category {
  idCategory   String @unique
  categoryName String @unique
  createAt     DateTime @default(now())
  product     Product[]

  @@id([idCategory])
}

//  ----------------- HERE WE ARE SETTING THE MODELS FOR OUR ORDERS ---------------

model Orders {
  idOrders    String @unique
  id          Int @unique @default(autoincrement())
  order_Date  DateTime @default(now())
  total_amout Decimal @db.Decimal(10, 2)
  status      String
  user        User @relation(fields: [userId], references: [idUser])
  userId      String
  order_Items OrderItems[]

  @@id([idOrders, userId])
}

model OrderItems {
  idOrderItems   String @unique
  quiantity      Int
  price          Decimal @db.Decimal(10, 2)
  order          Orders @relation(fields: [orderId], references: [idOrders])
  orderId        String
  product        Product @relation(fields: [productId], references: [idProduct])
  productId      String

  @@id([idOrderItems, orderId, productId])
}

//  ----------------- HERE WE ARE SETTING THE MODELS FOR OUR USERS ----------------

model User {
  idUser             String @unique
  username           String @unique
  email              String @unique
  password           String
  created_At         DateTime @default(now())
  is_Active          Boolean @default(true)
  role               Role @relation(fields: [roleId], references: [role_Name])
  roleId             String
  contactInformation ContactInformation[]
  orders             Orders[]
  monthlySale        MonthlySale[]
  topSale            TopSale[]

  @@id([idUser, username, email, roleId])
}

model ContactInformation {
  idContact     String @unique
  name          String 
  last_Name     String?
  phoneNumber   PhoneNumber[]
  address       Address[]
  user User @relation(fields: [userId], references: [idUser])
  userId     String

  @@id([idContact,userId])
}

model PhoneNumber {
  idPhoneNumber String @unique
  phone_number  Int @unique
  contact_information ContactInformation @relation(fields: [ContactId], references: [idContact])
  ContactId     String
  @@id([idPhoneNumber, ContactId])
}

model Address {
  idAddress      String @unique
  address_line_1 String
  address_line_2 String?
  address_line_3 String?
  city           String
  typeState     typeState @relation(fields: [type_state], references: [idTypeState])
  type_state     String
  zip_code       Int
  contact_information ContactInformation @relation(fields: [ContactId], references: [idContact])
  ContactId String

  @@id([idAddress, type_state])
}

model typeState {
  idTypeState    String @unique
  type_state     String @unique
  create_At      DateTime @default(now())
  address        Address[]
}

model Role{
  idRole      String @unique
  role_Name   String @unique
  create_At   DateTime @default(now())
  user        User[]
  permissions permissions @relation(fields: [permissionsId], references: [idPermissions])
  permissionsId String

  @@id([idRole, permissionsId])
}

model permissions{
  idPermissions   String @unique
  permission      String @unique
  role            Role[]

  @@id([idPermissions])
}

//  ----------------- HERE WE ARE SETTING THE MODELS FOR TOP SALES ----------------

model MonthlySale {
  idMonthSale    String @unique
  month          String
  dateTime       DateTime 
  customer       User @relation(fields: [customer_id], references: [idUser])
  customer_id    String
  product        Product @relation(fields: [product_name], references: [name_Product])
  product_name   String
  revenue        Decimal @db.Decimal(10,2)
  revenue_rank   Int

  @@id([idMonthSale, customer_id, product_name])
}

model TopSale {
  idTopSale      String @unique
  month          DateTime
  customer       User @relation(fields: [customer_id], references: [idUser])
  customer_id    String
  product        Product @relation(fields: [product_name], references: [name_Product])
  product_name   String
  revenue        Decimal
  revenue_rank   Int

  @@id([idTopSale, customer_id,product_name])
}